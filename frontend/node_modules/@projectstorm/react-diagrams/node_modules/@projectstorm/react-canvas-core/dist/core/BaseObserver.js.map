{"version":3,"file":"BaseObserver.js","sourceRoot":"","sources":["../../src/core/BaseObserver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AA+CrC;;GAEG;AACH,MAAM,OAAO,YAAY;IAGxB;QACC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAEO,iBAAiB,CAAC,IAAa,EAAE,CAAU,EAAE,KAAgB;QACpE,IAAI,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClC,wDAAwD;YACxD,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBAC3B,OAAO,KAAK,CAAC;aACb;YACD,yBAAyB;YACzB,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAChB,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC;aAChC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,SAAS,CAAoB,KAAmC,EAAE,CAAU;QAC3E,KAAK,mBACJ,MAAM,EAAE,IAAI,EACZ,eAAe,EAAE,GAAG,EAAE;gBACrB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,IACE,KAAK,CACR,CAAC;QAEF,WAAW;QACX,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,eAAe,EAAE,gCAC1C,KAAK,KACR,QAAQ,EAAE,CAAC,GACO,CAAC,CAAC;QAErB,kBAAkB;QAClB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC,EAAE,KAAkB,CAAC,CAAC;QAErD,YAAY;QACZ,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,gCACzC,KAAK,KACR,QAAQ,EAAE,CAAC,GACO,CAAC,CAAC;IACtB,CAAC;IAED,gBAAgB,CAAC,EAAwB;QACxC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,6BAA6B;YAC7B,IAAI,GAAG,KAAK,KAAK,EAAE;gBAClB,OAAO;aACP;SACD;IACF,CAAC;IAED,iBAAiB,CAAC,QAAW;QAC5B,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,QAAQ,EAAE;gBACpC,OAAO;oBACN,EAAE,EAAE,EAAE;oBACN,QAAQ,EAAE,QAAQ;oBAClB,UAAU,EAAE,GAAG,EAAE;wBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBAC3B,CAAC;iBACD,CAAC;aACF;SACD;IACF,CAAC;IAED,gBAAgB,CAAC,QAAW;QAC3B,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;QAC9B,OAAO;YACN,EAAE,EAAE,EAAE;YACN,QAAQ,EAAE,QAAQ;YAClB,UAAU,EAAE,GAAG,EAAE;gBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC3B,CAAC;SACD,CAAC;IACH,CAAC;IAED,kBAAkB,CAAC,QAA4B;QAC9C,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,QAA2B,CAAC,UAAU,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC;SACZ;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,MAAM,EAAE;YACX,MAAM,CAAC,UAAU,EAAE,CAAC;YACpB,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;CACD","sourcesContent":["import { Toolkit } from '../Toolkit';\n\nexport interface BaseEvent {\n\tfiring: boolean;\n\tstopPropagation: () => any;\n}\n\nexport interface BaseEventProxy extends BaseEvent {\n\tfunction: string;\n}\n\n/**\n * Listeners are always in the form of an object that contains methods that take events\n */\nexport type BaseListener = {\n\t/**\n\t * Generic event that fires before a specific event was fired\n\t */\n\teventWillFire?: (event: BaseEvent & { function: string }) => void;\n\n\t/**\n\t * Generic event that fires after a specific event was fired (even if it was consumed)\n\t */\n\teventDidFire?: (event: BaseEvent & { function: string }) => void;\n} & {\n\t/**\n\t * Type for other events that will fire\n\t */\n\t[key: string]: (event: BaseEvent) => any;\n};\n\nexport interface ListenerHandle {\n\t/**\n\t * Used to degister the listener\n\t */\n\tderegister: () => any;\n\t/**\n\t * Original ID of the listener\n\t */\n\tid: string;\n\n\t/**\n\t * Original Listener\n\t */\n\tlistener: BaseListener;\n}\n\n/**\n * Base observer pattern class for working with listeners\n */\nexport class BaseObserver<L extends BaseListener = BaseListener> {\n\tprotected listeners: { [id: string]: L };\n\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}\n\n\tprivate fireEventInternal(fire: boolean, k: keyof L, event: BaseEvent) {\n\t\tthis.iterateListeners((listener) => {\n\t\t\t// returning false here will instruct itteration to stop\n\t\t\tif (!fire && !event.firing) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// fire selected listener\n\t\t\tif (listener[k]) {\n\t\t\t\tlistener[k](event as BaseEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tfireEvent<K extends keyof L>(event: Partial<Parameters<L[K]>[0]>, k: keyof L) {\n\t\tevent = {\n\t\t\tfiring: true,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t},\n\t\t\t...event\n\t\t};\n\n\t\t// fire pre\n\t\tthis.fireEventInternal(true, 'eventWillFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\n\t\t// fire main event\n\t\tthis.fireEventInternal(false, k, event as BaseEvent);\n\n\t\t// fire post\n\t\tthis.fireEventInternal(true, 'eventDidFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\t}\n\n\titerateListeners(cb: (listener: L) => any) {\n\t\tfor (let id in this.listeners) {\n\t\t\tconst res = cb(this.listeners[id]);\n\t\t\t// cancel itteration on false\n\t\t\tif (res === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetListenerHandle(listener: L): ListenerHandle {\n\t\tfor (let id in this.listeners) {\n\t\t\tif (this.listeners[id] === listener) {\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tlistener: listener,\n\t\t\t\t\tderegister: () => {\n\t\t\t\t\t\tdelete this.listeners[id];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterListener(listener: L): ListenerHandle {\n\t\tconst id = Toolkit.UID();\n\t\tthis.listeners[id] = listener;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tlistener: listener,\n\t\t\tderegister: () => {\n\t\t\t\tdelete this.listeners[id];\n\t\t\t}\n\t\t};\n\t}\n\n\tderegisterListener(listener: L | ListenerHandle) {\n\t\tif (typeof listener === 'object') {\n\t\t\t(listener as ListenerHandle).deregister();\n\t\t\treturn true;\n\t\t}\n\t\tconst handle = this.getListenerHandle(listener);\n\t\tif (handle) {\n\t\t\thandle.deregister();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"]}