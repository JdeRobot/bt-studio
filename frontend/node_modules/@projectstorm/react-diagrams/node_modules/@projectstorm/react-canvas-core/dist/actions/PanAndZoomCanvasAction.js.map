{"version":3,"file":"PanAndZoomCanvasAction.js","sourceRoot":"","sources":["../../src/actions/PanAndZoomCanvasAction.ts"],"names":[],"mappings":"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","sourcesContent":["import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface PanAndZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class PanAndZoomCanvasAction extends Action {\n\tconstructor(options: PanAndZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (event.ctrlKey) {\n\t\t\t\t\t// Pinch and zoom gesture\n\t\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\n\t\t\t\t\tlet scrollDelta = options.inverseZoom ? event.deltaY : -event.deltaY;\n\t\t\t\t\tscrollDelta /= 3;\n\n\t\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\t} else {\n\t\t\t\t\t// Pan gesture\n\t\t\t\t\tlet yDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\tlet xDelta = options.inverseZoom ? -event.deltaX : event.deltaX;\n\t\t\t\t\tmodel.setOffset(model.getOffsetX() - xDelta, model.getOffsetY() - yDelta);\n\t\t\t\t}\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"]}