{"version":3,"file":"DeleteItemsAction.js","sourceRoot":"","sources":["../../src/actions/DeleteItemsAction.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAe,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAExE,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAY5B;;GAEG;AACH,MAAM,OAAO,iBAAkB,SAAQ,MAAM;IAC5C,YAAY,UAAoC,EAAE;QACjD,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC7C,MAAM,SAAS,mBACd,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,KAAK,EACf,MAAM,EAAE,KAAK,EACb,OAAO,EAAE,KAAK,IACX,OAAO,CAAC,SAAS,CACpB,CAAC;QAEF,KAAK,CAAC;YACL,IAAI,EAAE,SAAS,CAAC,QAAQ;YACxB,IAAI,EAAE,CAAC,KAAiC,EAAE,EAAE;gBAC3C,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;gBAEpE,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,EAAE;oBACrG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE;wBACjE,yCAAyC;wBACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE;4BACtB,KAAK,CAAC,MAAM,EAAE,CAAC;yBACf;oBACF,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;iBAC5B;YACF,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"]}