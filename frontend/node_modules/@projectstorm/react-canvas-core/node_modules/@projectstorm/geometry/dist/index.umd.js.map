{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@projectstorm/react-diagrams-geometry/webpack/universalModuleDefinition","webpack://@projectstorm/react-diagrams-geometry/webpack/bootstrap","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/compat get default export","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/define property getters","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/hasOwnProperty shorthand","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/make namespace object","webpack://@projectstorm/react-diagrams-geometry/./src/Matrix.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Point.ts","webpack://@projectstorm/react-diagrams-geometry/external commonjs \"lodash/forEach\"","webpack://@projectstorm/react-diagrams-geometry/external commonjs \"lodash/map\"","webpack://@projectstorm/react-diagrams-geometry/external commonjs \"lodash/flatMap\"","webpack://@projectstorm/react-diagrams-geometry/./src/Bounds.ts","webpack://@projectstorm/react-diagrams-geometry/./src/toolkit.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Polygon.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Rectangle.ts","webpack://@projectstorm/react-diagrams-geometry/./src/BezierCurve.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@projectstorm/react-diagrams-geometry\"] = factory();\n\telse\n\t\troot[\"@projectstorm/react-diagrams-geometry\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Point } from './Point';\n\nexport class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.scaleMatrix(x, y),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.rotateMatrix(deg),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n","import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash/forEach\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash/map\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash/flatMap\");","import { Point } from './Point';\n\nexport enum BoundsCorner {\n\tTOP_LEFT = 'TL',\n\tTOP_RIGHT = 'TR',\n\tBOTTOM_RIGHT = 'BR',\n\tBOTTOM_LEFT = 'BL'\n}\n\nexport type Bounds = { [k in BoundsCorner]: Point };\n\nexport const boundsFromPositionAndSize = (x: number, y: number, width: number, height: number): Bounds => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(x, y),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(x + width, y),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(x + width, y + height),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(x, y + height)\n\t};\n};\n\nexport const createEmptyBounds = () => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point()\n\t};\n};\n","import { Point } from './Point';\nimport _flatMap from 'lodash/flatMap';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, createEmptyBounds } from './Bounds';\n\nexport const boundingBoxFromPoints = (points: Point[]): Bounds => {\n\tif (points.length === 0) {\n\t\treturn createEmptyBounds();\n\t}\n\n\tlet minX = points[0].x;\n\tlet maxX = points[0].x;\n\tlet minY = points[0].y;\n\tlet maxY = points[0].y;\n\n\tfor (let i = 1; i < points.length; i++) {\n\t\tif (points[i].x < minX) {\n\t\t\tminX = points[i].x;\n\t\t}\n\t\tif (points[i].x > maxX) {\n\t\t\tmaxX = points[i].x;\n\t\t}\n\t\tif (points[i].y < minY) {\n\t\t\tminY = points[i].y;\n\t\t}\n\t\tif (points[i].y > maxY) {\n\t\t\tmaxY = points[i].y;\n\t\t}\n\t}\n\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(minX, minY),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(maxX, minY),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(maxX, maxY),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(minX, maxY)\n\t};\n};\n\nexport const boundingBoxFromPolygons = (polygons: Polygon[]): Bounds => {\n\treturn boundingBoxFromPoints(\n\t\t_flatMap(polygons, (polygon) => {\n\t\t\treturn polygon.getPoints();\n\t\t})\n\t);\n};\n","import { Point } from './Point';\nimport _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport { Matrix } from './Matrix';\nimport { boundingBoxFromPoints } from './toolkit';\nimport { Bounds, BoundsCorner } from './Bounds';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Matrix.createScaleMatrix(x, y, origin);\n\t\t_forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = boundingBoxFromPoints(this.points);\n\t\treturn Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\n\t}\n\n\tgetBoundingBox(): Bounds {\n\t\treturn boundingBoxFromPoints(this.points);\n\t}\n}\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, boundsFromPositionAndSize, createEmptyBounds } from './Bounds';\n\nexport class Rectangle extends Polygon {\n\tstatic fromPositionAndSize(x: number, y: number, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(x, y, width, height));\n\t}\n\n\tstatic fromPointAndSize(position: Point, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(position.x, position.y, width, height));\n\t}\n\n\tconstructor(points?: Bounds) {\n\t\tif (!points) {\n\t\t\tpoints = createEmptyBounds();\n\t\t}\n\n\t\tsuper([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tconst points = boundsFromPositionAndSize(x, y, width, height);\n\t\tthis.setPoints([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Matrix","constructor","matrix","this","mmul","map","row","i","asArray","_","j","reduce","acc","n","rowIndex","columnIndex","multiply","matrices","m","length","scaleMatrix","x","y","translateMatrix","rotateMatrix","deg","Math","cos","sin","createScaleMatrix","origin","createRotateMatrix","Point","translate","clone","toSVG","asMatrix","transform","final","middlePoint","pointA","pointB","require","BoundsCorner","boundsFromPositionAndSize","width","height","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","createEmptyBounds","boundingBoxFromPoints","points","minX","maxX","minY","maxY","boundingBoxFromPolygons","polygons","polygon","getPoints","Polygon","serialize","point","deserialize","data","scale","setPoints","rotate","degrees","PI","getOrigin","offsetX","offsetY","doClone","ob","create","dimensions","getBoundingBox","Rectangle","fromPositionAndSize","fromPointAndSize","position","super","updateDimensions","containsPoint","tl","getTopLeft","br","getBottomRight","getWidth","sqrt","pow","getTopRight","getHeight","getBottomLeft","getTopMiddle","getBottomMiddle","getLeftMiddle","getRightMiddle","BezierCurvepPoints","BezierCurve","getSVGCurve","getSource","getSourceControl","getTargetControl","getTarget","Error","SOURCE","SOURCE_CONTROL","TARGET_CONTROL","TARGET","setSource","setSourceControl","setTargetControl","setTarget"],"sourceRoot":""}