{"version":3,"file":"SelectionBoxState.js","sourceRoot":"","sources":["../../src/states/SelectionBoxState.ts"],"names":[],"mappings":"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","sourcesContent":["import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { SelectionLayerModel } from '../entities/selection/SelectionLayerModel';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { BasePositionModel } from '../core-models/BasePositionModel';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface SimpleClientRect {\n\tleft: number;\n\tright: number;\n\twidth: number;\n\theight: number;\n\ttop: number;\n\tbottom: number;\n}\n\nexport class SelectionBoxState extends AbstractDisplacementState {\n\tlayer: SelectionLayerModel;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selection-box'\n\t\t});\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.layer = new SelectionLayerModel();\n\t\tthis.engine.getModel().addLayer(this.layer);\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tthis.layer.remove();\n\t\tthis.engine.repaintCanvas();\n\t}\n\n\tgetBoxDimensions(event: AbstractDisplacementStateEvent): SimpleClientRect {\n\t\tlet rel: Point;\n\n\t\tif ('touches' in event.event) {\n\t\t\tconst touch = event.event.touches[0];\n\t\t\trel = this.engine.getRelativePoint(touch.clientX, touch.clientY);\n\t\t} else {\n\t\t\trel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n\t\t}\n\n\t\treturn {\n\t\t\tleft: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\ttop: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n\t\t\twidth: Math.abs(rel.x - this.initialXRelative),\n\t\t\theight: Math.abs(rel.y - this.initialYRelative),\n\t\t\tright: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\tbottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n\t\t};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tthis.layer.setBox(this.getBoxDimensions(event));\n\n\t\tconst relative = this.engine.getRelativeMousePoint({\n\t\t\tclientX: this.initialX,\n\t\t\tclientY: this.initialY\n\t\t});\n\t\tif (event.virtualDisplacementX < 0) {\n\t\t\trelative.x -= Math.abs(event.virtualDisplacementX);\n\t\t}\n\t\tif (event.virtualDisplacementY < 0) {\n\t\t\trelative.y -= Math.abs(event.virtualDisplacementY);\n\t\t}\n\t\tconst rect = Rectangle.fromPointAndSize(\n\t\t\trelative,\n\t\t\tMath.abs(event.virtualDisplacementX),\n\t\t\tMath.abs(event.virtualDisplacementY)\n\t\t);\n\n\t\tfor (let model of this.engine.getModel().getSelectionEntities()) {\n\t\t\tif ((model as unknown as ModelGeometryInterface).getBoundingBox) {\n\t\t\t\tconst bounds = (model as unknown as ModelGeometryInterface).getBoundingBox();\n\t\t\t\tif (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n\t\t\t\t\tmodel.setSelected(true);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.setSelected(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n"]}