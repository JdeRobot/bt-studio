{"version":3,"file":"StateMachine.js","sourceRoot":"","sources":["../../src/core-state/StateMachine.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAA2B,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAM7E,MAAM,OAAO,YAAa,SAAQ,YAAkC;IAKnE,YAAY,MAAoB;QAC/B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,eAAe;QACd,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,KAAY;QACpB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7B,4CAA4C;QAC5C,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACrC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CACb;gBACC,QAAQ,EAAE,KAAK;aACf,EACD,cAAc,CACd,CAAC;SACF;IACF,CAAC;CACD","sourcesContent":["import { State } from './State';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\n\nexport interface StateMachineListener extends BaseListener {\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\n}\n\nexport class StateMachine extends BaseObserver<StateMachineListener> {\n\tprotected currentState: State;\n\tprotected stateStack: State[];\n\tprotected engine: CanvasEngine;\n\n\tconstructor(engine: CanvasEngine) {\n\t\tsuper();\n\t\tthis.engine = engine;\n\t\tthis.stateStack = [];\n\t}\n\n\tgetCurrentState() {\n\t\treturn this.currentState;\n\t}\n\n\tpushState(state: State) {\n\t\tthis.stateStack.push(state);\n\t\tthis.setState(state);\n\t}\n\n\tpopState() {\n\t\tthis.stateStack.pop();\n\t\tthis.setState(_.last(this.stateStack));\n\t}\n\n\tsetState(state: State) {\n\t\tstate.setEngine(this.engine);\n\n\t\t// if no state object, get the initial state\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.deactivated(state);\n\t\t}\n\t\tconst old = this.currentState;\n\t\tthis.currentState = state;\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.activated(old);\n\t\t\tthis.fireEvent<'stateChanged'>(\n\t\t\t\t{\n\t\t\t\t\tnewState: state\n\t\t\t\t},\n\t\t\t\t'stateChanged'\n\t\t\t);\n\t\t}\n\t}\n}\n"]}