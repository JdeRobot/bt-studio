export type PromiseHandlers = {
    resolve: (value?: any) => void;
    reject: (reason?: any) => void;
};
export interface ManagerMsg {
    id: string;
    command: string;
    data: any;
}
export interface WorldConfig {
    name: string;
    launch_file_path: string;
    ros_version: string;
    world: string;
    zip?: unknown;
}
export interface RobotConfig {
    name: string | null;
    launch_file_path: string | null;
    ros_version: string | null;
    world: string | null;
    start_pose: string | null;
}
export interface UniverseConfig {
    name: string;
    world: WorldConfig;
    robot: RobotConfig;
}
export type Events = string | string[];
export declare const events: {
    RESPONSES: string[];
    UPDATE: string;
    STATE_CHANGED: string;
    INTROSPECTION: string;
    CODE_FORMAT: string;
    CODE_ANALYSIS: string;
    CODE_AUTOCOMPLETE: string;
};
export declare const states: {
    IDLE: string;
    CONNECTED: string;
    WORLD_READY: string;
    TOOLS_READY: string;
    RUNNING: string;
    PAUSED: string;
};
