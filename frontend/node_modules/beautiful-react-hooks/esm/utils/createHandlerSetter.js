/* beautiful-react-hooks version: 0.31.1 */
import { useRef, useCallback } from 'react';

var createHandlerSetter = function createHandlerSetter(handlerValue) {
  var handlerRef = useRef(handlerValue);
  handlerRef.current = handlerValue;
  var setHandler = useCallback(function (nextCallback) {
    if (typeof nextCallback !== 'function') {
      throw new Error('the argument supplied to the \'setHandler\' function should be of type function');
    }

    handlerRef.current = nextCallback;
  });
  return [handlerRef, setHandler];
};

export default createHandlerSetter;
