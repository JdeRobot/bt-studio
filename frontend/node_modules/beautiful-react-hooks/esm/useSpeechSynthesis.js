/* beautiful-react-hooks version: 0.31.1 */
import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.js';
import { useMemo, useEffect, useCallback } from 'react';

var defaultOptions = {
  rate: 0,
  pitch: 0,
  volume: 1
};

var useSpeechSynthesis = function useSpeechSynthesis(text) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;
  var utter = useMemo(function () {
    return new SpeechSynthesisUtterance(text);
  }, [text]);

  var voiceOptions = _objectSpread2(_objectSpread2({}, defaultOptions), options);

  utter.voice = voiceOptions.voice;
  useEffect(function () {
    utter.pitch = voiceOptions.pitch;
  }, [voiceOptions.pitch]);
  useEffect(function () {
    utter.rate = voiceOptions.rate;
  }, [voiceOptions.rate]);
  useEffect(function () {
    utter.volume = voiceOptions.volume;
  }, [voiceOptions.volume]);
  var speak = useCallback(function () {
    return speechSynthesis.speak(utter);
  }, [text, voiceOptions.pitch, voiceOptions.rate, voiceOptions.voice, voiceOptions.volume]);
  return {
    speak: speak,
    speechSynthUtterance: utter
  };
};

export default useSpeechSynthesis;
