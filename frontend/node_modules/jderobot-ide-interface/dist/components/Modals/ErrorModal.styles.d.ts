import { ErrorVariant } from "./ErrorModal";
interface StyledModalErrorRowProps {
    roundness?: number;
    variant: ErrorVariant;
    errorButtonColor?: string;
    errorHoverColor?: string;
    errorTextColor?: string;
    infoButtonColor?: string;
    infoHoverColor?: string;
    infoTextColor?: string;
    warningButtonColor?: string;
    warningHoverColor?: string;
    warningTextColor?: string;
}
export declare const StyledModalErrorRow: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalErrorRowProps>> & string;
interface StyledModalErrorProps {
    variant: ErrorVariant;
    error?: string;
    errorBorder?: string;
    info?: string;
    infoBorder?: string;
    warning?: string;
    warningBorder?: string;
    bgColor?: string;
    borderColor?: string;
    roundness?: number;
}
export declare const StyledModalError: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>, StyledModalErrorProps>> & string;
interface StyledModalErrorTitlebarProps {
    variant: ErrorVariant;
    color?: string;
    darkColor?: string;
    hoverColor?: string;
    roundness?: number;
}
export declare const StyledModalErrorTitlebar: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalErrorTitlebarProps>> & string;
export {};
