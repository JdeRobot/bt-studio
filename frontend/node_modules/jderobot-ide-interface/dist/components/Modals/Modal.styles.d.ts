interface StyledModalProps {
    bgColor?: string;
    borderColor?: string;
    roundness?: number;
}
export declare const StyledModal: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>, StyledModalProps>> & string;
export declare const StyledModalContent: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
interface StyledModalTitlebarProps {
    color?: string;
    hoverColor?: string;
    roundness?: number;
}
export declare const StyledModalTitlebar: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalTitlebarProps>> & string;
interface StyledModalCloseButtonProps {
    color?: string;
}
export declare const StyledModalCloseButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<Omit<import("react").SVGProps<SVGSVGElement> & {
    title?: string;
}, "ref"> & {
    ref?: ((instance: SVGSVGElement | null) => void) | import("react").RefObject<SVGSVGElement> | null | undefined;
}, StyledModalCloseButtonProps>> & string & Omit<import("react").FunctionComponent<import("react").SVGProps<SVGSVGElement> & {
    title?: string;
}>, keyof import("react").Component<any, {}, any>>;
interface StyledModalBackButtonProps {
    color?: string;
}
export declare const StyledModalBackButton: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<Omit<import("react").SVGProps<SVGSVGElement> & {
    title?: string;
}, "ref"> & {
    ref?: ((instance: SVGSVGElement | null) => void) | import("react").RefObject<SVGSVGElement> | null | undefined;
}, StyledModalBackButtonProps>> & string & Omit<import("react").FunctionComponent<import("react").SVGProps<SVGSVGElement> & {
    title?: string;
}>, keyof import("react").Component<any, {}, any>>;
interface StyledModalRowProps {
    color?: string;
    buttonColor?: string;
    roundness?: number;
}
export declare const StyledModalRow: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalRowProps>> & string;
interface StyledModalButtonRowProps {
    color?: string;
    buttonColor?: string;
    roundness?: number;
}
export declare const StyledModalButtonRow: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalButtonRowProps>> & string;
interface StyledModalButtonDeleteProps {
    bgColor?: string;
}
export declare const StyledModalButtonDelete: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, StyledModalButtonDeleteProps>> & string;
export declare const StyledModalInputRowContainer: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;
interface StyledModalInputProps {
    color?: string;
    placeholderColor?: string;
    bgColor?: string;
    borderColor?: string;
    focusBorderColor?: string;
    invalidBorderColor?: string;
    roundness?: number;
    valid?: boolean;
}
export declare const StyledModalInput: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledModalInputProps>> & string;
export {};
