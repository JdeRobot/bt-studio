interface StyledExplorerExtraMenuBackdropProps {
    active?: boolean;
}
export declare const StyledExplorerExtraMenuBackdrop: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledExplorerExtraMenuBackdropProps>> & string;
interface StyledExplorerExtraMenuProps {
    bgColor?: string;
    borderColor?: string;
    roundness?: number;
    top: number;
    left: number;
}
export declare const StyledExplorerExtraMenu: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledExplorerExtraMenuProps>> & string;
interface StyledExplorerExtraMenuEntryProps {
    hoverColor?: string;
}
export declare const StyledExplorerExtraMenuEntry: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledExplorerExtraMenuEntryProps>> & string;
interface StyledExplorerExtraMenuDividerProps {
    bgColor?: string;
}
export declare const StyledExplorerExtraMenuDivider: import("styled-components/dist/types").IStyledComponentBase<"web", import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, StyledExplorerExtraMenuDividerProps>> & string;
export {};
