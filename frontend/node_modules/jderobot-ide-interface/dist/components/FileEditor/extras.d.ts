import { Monaco } from "@monaco-editor/react";
import { CommsManager } from "jderobot-commsmanager";
import type { languages } from "monaco-editor";
interface Range {
    startLineNumber: number;
    endLineNumber: number;
    startColumn: number;
    endColumn: number;
}
interface CompletionItem {
    detail?: string;
    documentation: string;
    insertText: string;
    insertTextRules: number;
    kind: number;
    label: string;
    range: Range;
}
export declare const monacoEditorSnippet: (monaco: Monaco, manager: CommsManager | null) => void;
export declare const snippetKind: (kind: string, monaco: Monaco) => languages.CompletionItemKind.Method | languages.CompletionItemKind.Function | languages.CompletionItemKind.Variable | languages.CompletionItemKind.Class | languages.CompletionItemKind.Module | languages.CompletionItemKind.Property | languages.CompletionItemKind.Keyword | languages.CompletionItemKind.File | languages.CompletionItemKind.TypeParameter | languages.CompletionItemKind.Snippet;
export declare const snippetsBuilderV2: (monaco: Monaco, range: Range) => CompletionItem[];
export {};
